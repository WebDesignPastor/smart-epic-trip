basePath: /api
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handler.userLoginRequest:
    properties:
      user:
        properties:
          email:
            type: string
          password:
            type: string
        required:
        - email
        - password
        type: object
    type: object
  handler.userRegisterRequest:
    properties:
      user:
        properties:
          email:
            type: string
          password:
            type: string
          username:
            type: string
        required:
        - email
        - password
        - username
        type: object
    type: object
  handler.userResponse:
    properties:
      token:
        type: string
      user:
        properties:
          email:
            type: string
          password:
            type: string
          username:
            type: string
        type: object
    type: object
  handler.userUpdateRequest:
    properties:
      user:
        properties:
          email:
            type: string
          password:
            type: string
          username:
            type: string
        type: object
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  utils.Error:
    properties:
      errors:
        additionalProperties: true
        type: object
    type: object
host: localhost:8080
info:
  contact: {}
  description: Api to save trip itenary and it's corresponding places
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Trips api
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: get accounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - BearerAuth: []
      summary: List accounts
      tags:
      - accounts
    post:
      consumes:
      - application/json
      description: sign up
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.userRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.userResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Sign up
      tags:
      - accounts
    put:
      consumes:
      - application/json
      description: update
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.userUpdateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.userResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - BearerAuth: []
      summary: Update
      tags:
      - accounts
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: delete
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
      security:
      - BearerAuth: []
      summary: Delete
      tags:
      - accounts
  /users/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.userLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.userResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.Error'
      summary: Login
      tags:
      - accounts
swagger: "2.0"
